name: Daily Windows Build from GitLab

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Check out GitHub repository
        uses: actions/checkout@v3

      # Step 1: Create askpass.bat script to pass the GitLab token as the password
      - name: Create askpass.bat for GitLab authentication
        shell: pwsh
        run: |
          Set-Content -Path "$env:GITHUB_WORKSPACE\askpass.bat" -Value "@echo off`necho %GITLAB_TOKEN%"
        env:
          GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}

      # Step 2: Set GIT_ASKPASS to use askpass.bat and clone the GitLab repository
      - name: Clone GitLab Repository
        env:
          GIT_ASKPASS: ${{ github.workspace }}\askpass.bat
          GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
        run: git clone https://lycis@gitlab.com/lycis/the-dark-aid.git

      - name: Install Qt 6.8 on Windows
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.8.0'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2022_64'
          dir: 'C:/Qt'
  
      - name: Setup MSVC environment
        uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: x64

      - name: Download jom.exe
        shell: pwsh
        run: | 
          cd the-dark-aid
          Invoke-WebRequest -Uri 'http://download.qt.io/official_releases/jom/jom.zip' -OutFile '.\jom.zip'
          Expand-Archive -LiteralPath '.\jom.zip' -DestinationPath '.\jom\'

      - name: Build with qmake-nmake
        shell: cmd
        run: |
          cd the-dark-aid
          set QTDIR=C:/Qt/6.8.0/msvc2022_64
          set PATH=%PATH%;%QTDIR%/bin
          mkdir build
          cd build
          qmake ../
          ..\jom\jom.exe -j8

      - name: Run tests
        shell: cmd
        run: |
          @echo on
          cd the-dark-aid
          set QTDIR=C:/Qt/6.8.0/msvc2022_64
          set PATH=%PATH%;%QTDIR%/bin
          cd build\bin\release\thedarkaid\lib\
          xcopy ..\..\..\..\..\libs\stackwalker.dll .
          .\tests.exe

      - name: Store build result
        uses: actions/upload-artifact@v4
        with:
          name: thedarkaid-nightly.zip
          path: ./the-dark-aid/build/bin/release/thedarkaid_16_windows_qt6.8.zip

      # - name: Upload to GitLab nightly release
      #     shell: pwsh
      #     env:
      #       GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
      #     run: |
      #       # Artifact download URL
      #       $artifactUrl = "https://github.com/$env:GITHUB_REPOSITORY/suites/$env:GITHUB_RUN_ID/artifacts/$env:GITHUB_ARTIFACT_ID"
  
      #       # Define release name and tag
      #       $releaseName = "Nightly Release"
      #       $tagName = "nightly"
      #       $description = "Automated nightly release by GitHub Actions"
  
      #       # Post release to GitLab
      #       Invoke-RestMethod -Uri "https://gitlab.com/api/v4/projects/63089662/releases" `
      #         -Method Post `
      #         -Headers @{ "PRIVATE-TOKEN" = "$env:GITLAB_TOKEN" } `
      #         -Body @{
      #           name = $releaseName
      #           tag_name = $tagName
      #           description = $description
      #           assets = @{
      #             links = @(@{
      #               name = "thedarkaid.zip"
      #               url = $artifactUrl
      #             })
      #           }
      #         } | ConvertTo-Json -Depth 10
  
